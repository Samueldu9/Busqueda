
package busqueda;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;


public class FrmBusqueda extends javax.swing.JFrame {
    
    DefaultListModel modelo = new DefaultListModel();
    int iteracion=0;
    int elementos=0;
    int salir=0;
    int aux=0;
    int elementos1=-1;
    int menor, mitad;
    
    
   
    public FrmBusqueda() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAgregar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        txtBusqueda = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstNumeros = new javax.swing.JList<>();
        txtNumero = new javax.swing.JTextField();
        btnBinaria = new javax.swing.JButton();
        btnSeleccion = new javax.swing.JButton();
        btnInsercion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Busqueda Lineal");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(lstNumeros);

        btnBinaria.setText("Busqueda Binaria");
        btnBinaria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBinariaActionPerformed(evt);
            }
        });

        btnSeleccion.setText("Ordenamiento de Selección");
        btnSeleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionActionPerformed(evt);
            }
        });

        btnInsercion.setText("Ordenamiento de Inserción");
        btnInsercion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsercionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtBusqueda)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnBinaria, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSeleccion, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                            .addComponent(btnInsercion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAgregar))))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(btnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                        .addComponent(btnBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBinaria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSeleccion))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInsercion))
                .addGap(78, 78, 78))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        elementos++;
        modelo.addElement(txtNumero.getText());
        lstNumeros.setModel(modelo);
        txtNumero.setText("");
        
        
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        while ((iteracion < elementos) && salir == 0)
        {
            lstNumeros.setSelectedIndex(iteracion);
            if (lstNumeros.getSelectedValue().toString().equals(txtBusqueda.getText()))
            {
                JOptionPane.showMessageDialog(null,iteracion);
                salir=1;
            }
            iteracion++;
            
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnSeleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionActionPerformed
        int[] Seleccion=new int[elementos];
        for (int i=0; i<elementos;i++)
        {
            lstNumeros.setSelectedIndex(iteracion);
            Seleccion[i]=Integer.valueOf(lstNumeros.getSelectedValue());
            iteracion++;
        }
        
        int pos=0;
        int iteraciones=0;
        int valor=0;


        for (int x=0;x<Seleccion.length-1;x++)
        {
            int min=Seleccion[pos];
            for (int j=pos;j<Seleccion.length;j++)
            {
                if (Seleccion[j]<min)
                {
                   min=Seleccion[j];
                   valor=j;
                }
            }     

            if (Seleccion[pos] > Seleccion[valor])
            {
                aux=Seleccion[pos];
                Seleccion[pos]=Seleccion[valor];
                Seleccion[valor]=aux; 
                iteraciones++;
                
                for (int j=0; j<elementos;j++)
                {
                    System.out.printf("%s \n",Seleccion[j]);
                }
                System.out.printf("-------- Valor: %d, Pos: %d, Iteración: %d \n",valor,pos,iteraciones);
            }
            pos++;
        }
        System.out.printf("Número total de iteraciones: %d \n",iteraciones);
  
    }//GEN-LAST:event_btnSeleccionActionPerformed

    private void btnInsercionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsercionActionPerformed
        int []Insercion = new int [elementos];
        
        int posi=1;
        int pos=0;
        int cambio=0;
        int iteraciones=0;
        
        //Ingresar valores dentro del vector Inserción
        for (int i=0; i<elementos;i++)
        {
            lstNumeros.setSelectedIndex(iteracion);
            Insercion[i]=Integer.valueOf(lstNumeros.getSelectedValue());
            iteracion++;
        }
       
        //ORDENAMIENTO POR INSERCIÓN
        // posi=1,cambio=0,iteraciones=0,pos=0,
        for (int x=posi;x<Insercion.length;x++)
        {
            if (Insercion[pos] > Insercion[x])
            {
                cambio=1;
                iteraciones++;
            }
            if (cambio==1)
            {
                aux=Insercion[pos];
                Insercion[pos]=Insercion[x];
                Insercion[x]=aux;
                
                for (int j=pos;j>=1;j--)
                {
                    if (Insercion[j] < Insercion[j-1])
                    {
                        aux=Insercion[j-1];
                        Insercion[j-1]=Insercion[j];
                        Insercion[j]=aux;
                    }
                }
            }
            for (int k=0; k<elementos;k++)
            {
                System.out.printf("%s \n",Insercion[k]);
            }
            System.out.printf("----------- \n");
            
            cambio=0;
            pos++;
        }

        System.out.printf("Número de iteraciones: %d",iteraciones);
        
        
        
        
    }//GEN-LAST:event_btnInsercionActionPerformed

    private void btnBinariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBinariaActionPerformed
        mitad=(elementos1+menor)/2;
        lstNumeros.setSelectedIndex(mitad);
        
        if (lstNumeros.getSelectedValue().toString().equals(txtBusqueda.getText()))
        {
            JOptionPane.showMessageDialog(null,iteracion);
            salir=1;
        }
        
        else if (Integer.valueOf(txtBusqueda.getText()) > Integer.valueOf(lstNumeros.getSelectedValue()))
        {
            menor=mitad+1;
            iteracion++;
        }
        
        else 
        {
            elementos=mitad-1;
            iteracion++;
        }
        
        lstNumeros.setSelectedIndex(0);
        
        if (lstNumeros.getSelectedValue().toString().equals(txtBusqueda.getText()))
        {
            JOptionPane.showMessageDialog(null,iteracion);
            salir=1;
        }
        lstNumeros.setSelectedIndex(1);
        
        if (lstNumeros.getSelectedValue().toString().equals(txtBusqueda.getText()))
        {
            JOptionPane.showMessageDialog(null, iteracion);
            salir=1;
        }
        
        
        
        
    }//GEN-LAST:event_btnBinariaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmBusqueda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmBusqueda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmBusqueda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmBusqueda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmBusqueda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBinaria;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnInsercion;
    private javax.swing.JButton btnSeleccion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lstNumeros;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JTextField txtNumero;
    // End of variables declaration//GEN-END:variables
}
